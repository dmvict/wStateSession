{
  "name" : "wstatesession",
  "version" : "0.3.166",
  "description" : "Mixin to add persistent session storing functionality to a class. StateSession extends StateStorage. These modules solve the common problem to persistently store the state( session ) of an object. Them let save the state in a specific moment ( for example on process exit ) and to restore the state later ( for example on process start ). Use the module to be more cross-platform, don't repeat yourself and forget about details of implementation you don't worry.",
  "author" : "Kostiantyn Wandalen <wanalen@01.school>",
  "license" : "MIT",
  "main" : "proto/wtools/amid/amixin/StateSession.s",
  "files" : [ "proto/wtools/amid/amixin", "proto/wtools/Tools.s", "out" ],
  "scripts" : { "test" : "wtest .run 'proto/**' rapidity:-3", "docgen" : "wdocgen proto" },
  "repository" :
  {
    "type" : "git",
    "url" : "https://github.com/Wandalen/wStateSession.git"
  },
  "bugs" :
  {
    "url" : "https://github.com/Wandalen/wStateSession/issues"
  },
  "dependencies" :
  {
    "wTools" : "",
    "wProto" : "",
    "wFiles" : "",
    "wstatestorage" : ""
  },
  "devDependencies" : { "wTesting" : "", "eslint" : "7.1.0", "wstatesession" : "file:." },
  "keywords" : [ "wTools" ]
}
